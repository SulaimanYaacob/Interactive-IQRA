// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Room {
    roomId              String @id @unique @default(uuid())
    roomPIN             String @unique //* Max 6 characters
    createdByClerkId    String //* Clerk's Id (Use this to retrieve user's room)
    createdByIdentifier String @default(uuid()) //* Backup Id generated from prisma (In case clerk is no longer used)
    iqraBook            String
    maxUsers            Int

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Appointment {
    appointmentId     String   @id @unique @default(uuid())
    studentClerkId    String //? User's that book the appointment 
    studentIdentifier String? //? (In case clerk is no longer used)
    comments          String?
    date              DateTime
    startTime         String
    endTime           String
    rejectedComments  String?
    status            STATUS

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model TutorApplication {
    applicationId       String  @id @unique @default(uuid())
    createdByIdentifier String?
    createdByClerkId    String
    status              STATUS
    files               File[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model File {
    fileId String @id @unique @default(uuid())
    key    String
    url    String
    name   String
    type   String
    size   Int

    application   TutorApplication @relation(fields: [applicationId], references: [applicationId], onDelete: Cascade)
    applicationId String
}

enum ROLE {
    STUDENT
    TUTOR
    ADMIN
}

enum STATUS {
    PENDING
    ACCEPTED
    REJECTED
    CANCELLED
}
